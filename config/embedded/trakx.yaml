# Trakx YAML config
#   Values can be overridden with env vars
#     Example: `TRAKX_LOGLEVEL=debug trakx run`

# TODO: find better names for these, ie conndb.trim should be conncache.expiry

# "debug", "info", "warn", "error", or "fatal"
# "debug" will enable debug only panics
loglevel: "info"

# how often to update expvar vals, 0 to disable
expvarinterval: 1s

# cachepath is the directory in which trakx will write it's pid, logs, and database
cachepath: ~/.cache/trakx/

debug:
  # port to serve pprof over, 0 to disable
  pprof: 0

# announce interval = base + [0, fuzz]
announce:
  base: 30m
  # fuzz >= 0
  fuzz: 5m

# http tracker vars
http:
  # "enabled"   enables the http tracker
  # "info"      serves the http server files, no http tracker
  # "disabled"  disables anything http related
  mode: "enabled"
  
  # ip address to bind to, null for all interfaces
  ip: null
  port: 1337
  
  # tcp timeouts in seconds, starting from accept()
  timeout:
    read: 3s
    write: 10s

  # number of worker goroutines to run
  threads: 512

# udp tracker vars
udp:
  enabled: true
  
  # ip address to bind to, null for all interfaces
  ip: null
  port: 1337
  
  # number of worker goroutines to run
  threads: 512

  # udp connection database
  conndb:
    # validate connection IDs
    # if disabled tracker can be abused for UDP amplification DoS
    validate: true

    # initalized size of connection database map
    # set to reduce memory usage by preallocating memory
    size: 0

    # interval for trimming expired connection IDs
    trim: 10m

    # maximum connection ID age before marked expired
    expiry: 30m

# numwant vars
numwant:
  # default number of peers in response if none specified
  default: 75
  
  # max number of peers in response, numwants above this will be capped
  limit: 200

# database vars
db:
  # database types:
  #   gomap - In memory database using golang maps
  type: "gomap"
  
  backup:
    # database backup interval, 0 to disable
    frequency: 0s

    # backup types:
    #   gomap:
    #     none  - don't backup db
    #     file  - write db to file
    #     pg    - write db to postgres
    type: "none"
  
    # backup path:
    # use "ENV:VARIABLE" for environment variables
    #   ex: "ENV:TEST" = os.Getenv("TEST")
    # types
    #   file  - filepath
    #   pg    - postgres db addr
    path: "ENV:DATABASE_URL"

  # interval for removing expired peers
  trim: 10m
  
  # max peer age before marked expired
  # should: expiry >= announce_base + announce_fuzz
  expiry: 40m
